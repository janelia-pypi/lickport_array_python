#+EXPORT_FILE_NAME: README.md
#+OPTIONS: toc:nil |:t ^:nil tags:nil

#+NAME: name
#+BEGIN_SRC text :exports none :noweb yes
lickport_array_interface
#+END_SRC

#+NAME: version
#+BEGIN_SRC text :exports none :noweb yes
2.0.1
#+END_SRC

#+NAME: repository-name
#+BEGIN_SRC text :exports none :noweb yes
lickport_array_interface_python
#+END_SRC

#+NAME: guix-name
#+BEGIN_SRC text :exports none :noweb yes
python-lickport-array-interface
#+END_SRC

#+NAME: description
#+BEGIN_SRC text :exports none :noweb yes
Python interface to the Janelia Dudman lab mouse lickport array.
#+END_SRC

#+NAME: license
#+BEGIN_SRC text :exports none :noweb yes
BSD 3-Clause License
#+END_SRC

#+NAME: url
#+BEGIN_SRC text :exports none :noweb yes
https://github.com/janelia-python/<<repository-name>>
#+END_SRC

#+NAME: author
#+BEGIN_SRC text :exports none :noweb yes
Peter Polidoro
#+END_SRC

#+NAME: email
#+BEGIN_SRC text :exports none :noweb yes
peter@polidoro.io
#+END_SRC

#+NAME: copyright
#+BEGIN_SRC text :exports none :noweb yes
2022 Howard Hughes Medical Institute
#+END_SRC

#+NAME: dependencies
#+BEGIN_SRC text :exports none :noweb yes
modular_client
#+END_SRC

#+BEGIN_EXAMPLE
<!-- README.me is generated automatically from .single-source-of-truth.org
File edits may be overwritten! -->
#+END_EXAMPLE
* About

#+BEGIN_SRC text :noweb yes
- Name: <<name>>
- Version: <<version>>
- Description: <<description>>
- License: <<license>>
- URL: <<url>>
- Author: <<author>>
- Email: <<email>>
- Copyright: <<copyright>>
- Dependencies:
  - <<dependencies>>
#+END_SRC

* More Information

This library is an interface to the [[https://github.com/janelia-kicad/lickport_array_module][Lickport Array Module]].

* Example Usage

#+BEGIN_SRC python
from lickport_array_interface import LickportArrayInterface, LickportArrayMetadata
dev = LickportArrayInterface() # Try to automatically detect port
dev = LickportArrayInterface(port='/dev/ttyACM0') # Linux specific port
dev = LickportArrayInterface(port='/dev/tty.usbmodem262471') # Mac OS X specific port
dev = LickportArrayInterface(port='COM3') # Windows specific port

data_path_str = '~/lickport_array_data/data_file'

metadata = LickportArrayMetadata()
metadata.experiment_name = 'mouse_library'
metadata.task_name = 'hex_foraging_V2'
metadata.subject_id = 'ML11_NAc'

dev.controller.activate_lickports([0,1])
dev.start_acquiring_data()
dev.start_saving_data(data_path_str,metadata)
dev.stop_saving_data()
dev.stop_acquiring_data()

dev.controller.dispense_lickport_for_duration(0,200)
dev.controller.dispense_lickports_for_duration([0,1],200)
dev.controller.dispense_all_lickports_for_duration(200)
dev.controller.get_activated_lickports()
dev.controller.activate_only_lickport(0)
dev.controller.activate_only_lickports([0,1])
dev.controller.activate_lickport(0)
dev.controller.activate_lickports([0,1])
dev.controller.deactivate_lickport(0)
dev.controller.deactivate_lickports([0,1])
dev.controller.activate_all_lickports()
dev.controller.deactivate_all_lickports()
#+END_SRC

** Data

#+BEGIN_EXAMPLE
I Experiment name  : mouse_library
I Task name  : hex_foraging_V2
I Subject ID : ML11_NAc
I Start date : 2022/05/23 16:43:38
time,millis,lickport_0,lickport_1,lickport_2,lickport_3,lickport_4,lickport_5,lickport_6,lickport_7,lickport_8,lickport_9,lickport_10,lickport_11
1653338620,956503527,A,LA,,,,,,,,,,
1653338622,956505441,LA,A,,,,,,,,,,
1653338624,956507372,A,A,,,,,,,,,,L
1653338626,956509622,A,A,,,,,,L,,,,
1653338628,956511133,A,A,,L,,,,,,,,
1653338629,956512828,A,A,,,L,,,,,,,
#+END_EXAMPLE

*** time

time in seconds since the epoch

The epoch is the point where the time starts, and is platform dependent. For
Unix, the epoch is January 1, 1970, 00:00:00 (UTC)

The term seconds since the epoch refers to the total number of elapsed seconds
since the epoch, typically excluding leap seconds. Leap seconds are excluded
from this total on all POSIX-compliant platforms.

*** millis

The number of milliseconds passed since the LickportArrayController board was
powered. This number will overflow (go back to zero), after approximately 50
days.

*** lickport_n

| Symbol       | Meaning                                        |
|--------------+------------------------------------------------|
| "L"          | lickport_n lick detected                       |
| "A"          | lickport_n activated                           |
| "LA" or "AL" | lickport_n lick detected and activated         |
| ""           | lickport_n neither lick detected nor activated |

* Installation

[[https://github.com/janelia-python/python_setup]]

** Linux and Mac OS X

#+BEGIN_SRC sh :noweb yes
python3 -m venv ~/venvs/<<name>>
source ~/venvs/<<name>>/bin/activate
pip install <<name>>
#+END_SRC

** Windows

#+BEGIN_SRC sh :noweb yes
python3 -m venv C:\venvs\<<name>>
C:\venvs\<<name>>\Scripts\activate
pip install <<name>>
#+END_SRC

** Guix

Setup guix-janelia channel:

https://github.com/guix-janelia/guix-janelia

#+BEGIN_SRC sh :noweb yes
guix install <<guix-name>>
#+END_SRC

* Development :noexport:

** Guix

#+BEGIN_SRC sh :noweb yes
git clone <<url>>
cd <<repository_name>>
make shell
make edits
make all
exit
#+END_SRC

* Tangled Files                                                    :noexport:

#+BEGIN_SRC text :tangle MANIFEST.in :exports none :noweb yes
# MANIFEST.in is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
include README.md
include LICENSE
#+END_SRC

#+BEGIN_SRC text :tangle pyproject.toml :exports none :noweb yes
# pyproject.toml is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
#+END_SRC

#+BEGIN_SRC text :tangle setup.cfg :exports none :noweb yes
# setup.cfg is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[metadata]
name = <<name>>
version = <<version>>
author = <<author>>
author_email = <<email>>
url = <<url>>
description = <<description>>
long_description = file: README.md
long_description_content_type = text/markdown
license = <<license>>
classifiers =
    Programming Language :: Python :: 3

[options]
packages = find:
install_requires =
    <<dependencies>>

[options.packages.find]
exclude =
    examples*
    tools*
    docs*
    <<name>>.tests*

[bdist_wheel]
# This flag says that the code is written to work on both Python 2 and Python
# 3. If at all possible, it is good practice to do this. If you cannot, you
# will need to generate wheels for each Python version that you support.
universal=1
#+END_SRC

#+BEGIN_SRC text :tangle setup.py :exports none :noweb yes
# setup.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from setuptools import setup


if __name__ == '__main__':
    setup()
#+END_SRC

#+BEGIN_SRC python :tangle lickport_array_interface/__about__.py :exports none :noweb yes
# __about__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
__version__ = '<<version>>'
__description__ = '<<description>>'
__license__ = '<<license>>'
__url__ = '<<url>>'
__author__ = '<<author>>'
__email__ = '<<email>>'
__copyright__ = '<<copyright>>'
#+END_SRC

#+BEGIN_SRC python :tangle lickport_array_interface/__init__.py :exports none :noweb yes
'''
<<description>>
'''

# __init__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from lickport_array_interface.__about__ import (
    __author__,
    __copyright__,
    __email__,
    __license__,
    __description__,
    __url__,
    __version__,
)

from .lickport_array_interface import LickportArrayInterface, LickportArrayMetadata
#+END_SRC
